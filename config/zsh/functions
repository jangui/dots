#!/usr/bin/zsh

# delete unwanted files
rm_crap() {
    rm -rf $HOME/Dropbox/.dropbox.cache/*
}

# override cd so new shells open where we left off
cd() {
    builtin cd $1
    pwd > $HOME/.pwd
}

# move files to trash 
del() {
  for filename in "$@" ; do
    # check if file exists
    if [ ! -f $filename ] ; then
      if [ ! -d $filename ] ; then
        echo "No such file or directory: $filename"
        continue
      fi
    fi
    
    # add timestamp if name conflict
    basefilename=$(basename $filename)
    if [[ $(find $HOME/.trashcan/ -maxdepth 1 -name "$basefilename" | wc -l) = 0 ]] ; then
      newName=$basefilename
    else
      newName=$basefilename.$(date +"%s")
    fi

    # move to trash
    trash="mv $filename $HOME/.trashcan/$newName 2> /dev/null;"
    forceTrash="mv $filename $HOME/.trashcan/$newName --force 2> /dev/null;"
    eval "$trash" || { eval "sudo $trash" } || { eval "sudo $forceTrash" }

  done
}

#empty trash
empty_trash() {
    delete='rm -rf $HOME/.trashcan 2> /dev/null;'
    eval "$delete" || { eval "sudo $delete" }
    mkdir "$HOME/.trashcan";
}

# upload file using sftp
upload() {
  if [ $# -ne 2 ]; then
    echo "usage: upload <user>@<host> <file>"
    return
  fi

  # check if file exists
  if [ ! -f $2 ]; then
    if [ ! -d $2 ] ; then
      echo "No such file or directory: $2"
      return
    fi
  fi

  # if directory, tar -> upload -> delete tar
  if [ -d $2 ]; then
    compressed=$HOME/$(basename $2).tar.gz
    tar zcf $compressed $2
    sftp $1 <<< "put $compressed"
    rm -rf $compressed
    return
  fi

  sftp $1 <<< "put $2"
}

# enter first docker container that matches grep
enter() {
  found=$(docker ps | grep $1 | awk {'print $1'} | head -1)
  if [ -z $found ] ; then
    echo "no containers found associated with '$1'"
    return
  fi
  docker exec -it $found sh
}

# run ssha and add keys
ssha() {
  eval `ssh-agent -s`
  ssh-add $HOME/.ssh/id_rsa
  ssh-add $HOME/.ssh/id_rsa_git
}
